#!/bin/sh
#Arch desktop install script

#declaring bash functions
mirrors(){
	sudo pacman -Sy reflector --noconfirm
	sudo cp /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.old
	sudo reflector --verbose --latest 20 --sort rate --save /etc/pacman.d/mirrorlist
}

yay_install(){
	sudo pacman -Sy git --noconfirm
	cd
	git clone https://aur.archlinux.org/yay-git.git
	cd yay-git
	makepkg -si --noconfirm
	cd
	rm -rf yay-git
}


yay_universal(){
	compositor="picom-jonaburg-git"
	web_browser="firefox qutebrowser"
	multimedia_player="mpv vlc"
	office_suite=" libreoffice-fresh galculator "
	fonts=" ttf-symbola ttf-dejavu ttf-liberation "
	GUI=" betterlockscreen lxsession i3-gaps nemo bspwm sxhkd xorg xorg-xinit polybar lightdm lightdm-slick-greeter lxsession dunst lxappearance yad xdotool"
	GUI_backend="xclip spectacle pulseaudio pavucontrol feh w3m alsa-firmware apulse pulseaudio-alsa alsa-oss nodejs"
	appearance=" python-pywal pfetch "
	terminal=" kitty "
	terminal_apps=" git rar dialog ranger gtop htop vim udisks2 "
	utniversity=" p3x-onentoe teams"
	other=" numlockx qbittorrent gimp dhcpcd playerctl code"
	yay -S --noconfirm  $compositor $web_browser $multimedia_player $office_suite $fonts $GUI $GUI_backend $appearance $terminal $terminal_apps $other $university
}

miscellaneous(){

	cd
	git clone https://github.com/edwardbas-pl/dmenu.git
	cd dmenu
	sudo make install
	cd
	rm -rf dmenu
	git clone https://github.com/cttynul/gimpshop-reloaded.git
	cd gimpshop-reloaded
	#chmod +x linux-install-2.10.sh
	sh linux-install-2.10.sh
	cd
	rm -rf gimpshop-reloaded

	curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
	    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

	cd
	git clone https://github.com/edwardbas-pl/backup.git
	cd backup
	sh Restore
	yay -S cmake --noconfirm

	ln -s /run/media/$USER/     ~/Media

	vim +PlugInstall +YcmRestartServer +qall
}

games(){

	sudo sed -i "/\[multilib\]/,/Include/"'s/^#//' /etc/pacman.conf

	#wine dependencies
	sudo pacman -Sy --noconfirm wine-staging giflib lib32-giflib libpng lib32-libpng libldap lib32-libldap gnutls lib32-gnutls mpg123 lib32-mpg123 openal lib32-openal v4l-utils lib32-v4l-utils libpulse lib32-libpulse libgpg-error lib32-libgpg-error alsa-plugins lib32-alsa-plugins alsa-lib lib32-alsa-lib libjpeg-turbo lib32-libjpeg-turbo sqlite lib32-sqlite libxcomposite lib32-libxcomposite libxinerama lib32-libgcrypt libgcrypt lib32-libxinerama ncurses lib32-ncurses opencl-icd-loader lib32-opencl-icd-loader libxslt lib32-libxslt libva lib32-libva gtk3 lib32-gtk3 gst-plugins-base-libs lib32-gst-plugins-base-libs vulkan-icd-loader lib32-vulkan-icd-loader

	#vulkan
	GPU=$(lspci | grep -i --color "vga\|3d\|2d")
	if [[ ${GPU} == *Radeon* ]];
	then
		echo "your GPU vendor is AMD"
		sudo pacman -S --needed lib32-vulkan-radeon vulkan-radeon
		sudo pacman -Sy --nonconfitm ib32-mesa vulkan-radeon lib32-vulkan-radeon vulkan-icd-loader lib32-vulkan-icd-loader
	fi
	if [[ ${GPU} == *Intel* ]];
	then
		echo "your GPU vendor is Intel"
		sudo pacman -S --needed lib32-vulkan-intel vulkan-intel
		sudo pacman -Sy --noconfirm lib32-mesa vulkan-intel lib32-vulkan-intel vulkan-icd-loader lib32-vulkan-icd-loader
	fi
	if [[ ${GPU} == *NV* ]];
	then
		echo "your GPU vendor is NVidia"
		sudo pacman -S --needed lib32-nvidia-utils nvidia libglvnd lib32-libglvnd
		sudo pacman -Sy --noconfirm nvidia-dkms nvidia-utils lib32-nvidia-utils nvidia-settings vulkan-icd-loader lib32-vulkan-icd-loaderfi
	fi
	wine and other packages
	sudo pacman -S --needed cabextract dosbox giflib gnutls gst-plugins-base-libs lib32-giflib lib32-gnutls lib32-gst-plugins-base-libs lib32-libcurl-gnutls lib32-libgcrypt lib32-libjpeg-turbo lib32-libpng lib32-libva lib32-libxslt lib32-mpg123 lib32-openal lib32-opencl-icd-loader lib32-sdl2 lib32-vkd3d lib32-vulkan-icd-loader libcurl-gnutls libgcrypt libjpeg-turbo libpng libva libxslt mono mpg123 openal opencl-icd-loader vkd3d vulkan-icd-loader wine-staging zstd gamemode lib32-gamemode 
	yay -S dxvk-bin
	#game launchers
	yay -Sy --noconfirm lutris steam gamemode
}
	

printers(){

	yay -S noconfirm hplip hplip-plugin cups hpuld pnm2ppa
	sudo systemctl enable --now cups
}

vm(){

	sudo pacman -Sy --noconfirm ebtables qemu virt-manager 
	sudo pacman -S --noconfirm libvirt dnsmasq 

	if [[ -d "/sys/firmware/efi/efivars" ]]
	then
	    sudo pacman -Sy --noconfirm ovmf
	fi

	distro=$( grep -m 1 NAME /etc/os-release )
	if [[ ${distro} == *Arch* ]];
	then
	    sudo systemctl enable --now libvirtd
	fi
	if [[ ${distro} == *Artix* ]];
	then
	    sudo pacman -S --noconfirm libvirt-runit
	    sudo ln -s /etc/runit/sv/libvirtd /run/runit/service
	fi
}

laptop(){
	yay -Sy --noconfirm --noconfirm networkmanager network-manager-applet  tlp tp_smapi acpi_call
}

#detect Arch vs Artix(runit version)
#sudo pacman -Sy mesa-demos
distro=$( grep -m 1 NAME /etc/os-release )
if [[ ${distro} == *Arch* ]];
then
	mirrors()
fi
yay_install()
yay_universal()
miscellaneous()
gamse()
#printers

if [[ -f /sys/clsass/power_supply/BAT0 ]]
then
	laptop
fi

sudo mkinitcpio -P


if [[ ${distro} == *Arch* ]];
then
	sudo systemctl enable lightdm --now
fi

if [[ ${distro} == *Artix* ]];
then
	echo there will be added multi init system support for artoix
fi

